pipeline{
    agent any
    environment{
        DATABASE_URI = credentials("DATABASE_URI")
        app_version = 'version1'
    }
    stages{
        stage("Testing"){
            steps{
                        sh "bash Codes/Jenkins/test.sh"
                }
            }
        stage("Build & Push"){
            steps{
		script{
                        sh "docker-compose build --parallel --build-arg APP_VERSION=${app_version} && docker-compose up -d"
			sh "docker system prune -af"
	                }
       		 }
	}
	stage("Config Management (ansible)"){
            steps{
                        sh "cd Codes/Ansible && /home/jenkins/.local/bin/ansible-playbook -i inventory playbook.yaml"
                }
        }
        stage("Deploy"){
            steps{
			sh "bash Codes/Jenkins/deploy.sh"
                	}
        	}
	}
    post{
        always{
            junit "**/junit.xml"
            cobertura coberturaReportFile: '**/coverage.xml', failNoReports: false, failUnstable: false, onlyStable: false
        }
    }
} 
        
